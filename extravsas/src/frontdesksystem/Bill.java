/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontdesksystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.util.Timer;
import java.util.TimerTask;


/**
 *
 * @author User PC
 */
public class Bill extends javax.swing.JFrame {

    /**
     * Creates new form Bill
     */
    public Bill() {
        initComponents();
        connectToDatabase();
    }
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    private void connectToDatabase() {
        try {
            // Load and register MySQL JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            // Establish connection to the database
            String url = "jdbc:mysql://localhost:3306/java_user_database"; // Replace with your database URL
            String username = "root"; // Replace with your username if necessary
            String password = ""; // Replace with your password if necessary
            con = DriverManager.getConnection(url, username, password);
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect to the database.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Billtextarea = new javax.swing.JTextArea();
        SeeBill = new javax.swing.JButton();
        Pay = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PHP = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Amount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        change = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(51, 0, 0));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        Billtextarea.setBackground(new java.awt.Color(51, 0, 0));
        Billtextarea.setColumns(20);
        Billtextarea.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        Billtextarea.setForeground(new java.awt.Color(255, 255, 255));
        Billtextarea.setRows(5);
        jScrollPane1.setViewportView(Billtextarea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 110, 670, 390));

        SeeBill.setBackground(new java.awt.Color(102, 0, 0));
        SeeBill.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        SeeBill.setForeground(new java.awt.Color(255, 255, 255));
        SeeBill.setText("See My Current Bill");
        SeeBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SeeBillMouseClicked(evt);
            }
        });
        SeeBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeeBillActionPerformed(evt);
            }
        });
        getContentPane().add(SeeBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, -1, -1));

        Pay.setBackground(new java.awt.Color(102, 0, 0));
        Pay.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        Pay.setForeground(new java.awt.Color(255, 255, 255));
        Pay.setText("PAY");
        Pay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PayMouseClicked(evt);
            }
        });
        Pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayActionPerformed(evt);
            }
        });
        getContentPane().add(Pay, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 640, 90, 40));

        jLabel1.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Total Bill:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 510, -1, -1));

        PHP.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        PHP.setForeground(new java.awt.Color(255, 255, 255));
        PHP.setText("PHP");
        getContentPane().add(PHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 510, -1, -1));

        jLabel3.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Amount:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 540, 90, -1));

        Amount.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        getContentPane().add(Amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 540, 230, 30));

        jLabel2.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Change:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 590, 80, -1));

        change.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeActionPerformed(evt);
            }
        });
        getContentPane().add(change, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 590, 230, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Screenshot_2024-11-17_123703-removebg-preview.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backgroundLandscape23.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1420, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SeeBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SeeBillMouseClicked
       // Clear any previous data from the Billtextarea
    Billtextarea.setText(""); 
    
// Variables to accumulate the total expenses
double productTotal = 0.0;
double serviceTotal = 0.0;
    
// Prepare SQL queries
String queryProductPurchase = "SELECT productname, quantity, price, total FROM productpurchase";
String queryAvailServices = "SELECT servicename, serviceprice FROM availservices";
    
try {
    // Execute the query to fetch product purchase data
    pst = con.prepareStatement(queryProductPurchase);
    rs = pst.executeQuery();
        
    // Append product purchase data to the Billtextarea and calculate the total
    Billtextarea.append("=======================================\n");
    Billtextarea.append("              Products Purchased\n");
    Billtextarea.append("=======================================\n");
    while (rs.next()) {
        String productName = rs.getString("productname");
        int quantity = rs.getInt("quantity");
        double price = rs.getDouble("price");
        double total = rs.getDouble("total");
        productTotal += total;  // Accumulate total for product purchases
        Billtextarea.append(String.format("Product: %-20s Quantity: %-3d Price: %-6.2f Total: %-6.2f\n", productName, quantity, price, total));
    }
        
    // Execute the query to fetch available services data
    pst = con.prepareStatement(queryAvailServices);
    rs = pst.executeQuery();
        
    // Append available services data to the Billtextarea and calculate the total
    Billtextarea.append("\n=======================================\n");
    Billtextarea.append("              Available Services\n");
    Billtextarea.append("=======================================\n");
    while (rs.next()) {
        String serviceName = rs.getString("servicename");
        double servicePrice = rs.getDouble("serviceprice");
        serviceTotal += servicePrice;  // Accumulate total for services
        Billtextarea.append(String.format("Service: %-20s Price: %-6.2f\n", serviceName, servicePrice));
    }
        
    // Calculate the overall total
    double totalExpenses = productTotal + serviceTotal;
        
    // Display the total expenses in the PHP JLabel with a decorative line
    Billtextarea.append("\n=======================================\n");
    Billtextarea.append(String.format("Total Expenses: %-6.2f\n", totalExpenses));
    Billtextarea.append("=======================================\n");
        
    // Display the total expenses in the PHP JLabel
    PHP.setText("PHP: " + totalExpenses);
        
} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error retrieving bill data.", "Error", JOptionPane.ERROR_MESSAGE);
} finally {
    try {
        if (rs != null) rs.close();
        if (pst != null) pst.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
}

    }//GEN-LAST:event_SeeBillMouseClicked

    private void PayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PayMouseClicked
        try {
        // Step 1: Get the total bill from the PHP label
        String totalBillText = PHP.getText();  // Total bill displayed in PHP JLabel
        // Extract the numeric value from the label (assuming label text format is "Total Expenses: 123.45")
        double totalBill = Double.parseDouble(totalBillText.replace("PHP: ", "").trim());

        // Step 2: Get the amount input from the Amount text field
        String amountText = Amount.getText().trim();  // Get the text from Amount text field
        double amountEntered = 0.0;
        
        if (amountText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter an amount.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            amountEntered = Double.parseDouble(amountText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid amount entered. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Step 3: Check if the entered amount is sufficient
        if (amountEntered < totalBill) {
            JOptionPane.showMessageDialog(this, "Entered amount is less than the total bill. Please enter a valid amount.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Step 4: Calculate the change (remaining balance)
        double changeBill = amountEntered - totalBill;
        
        change.setText(String.format("%.2f", changeBill));

        // Step 5: Display the remaining balance/change in the Billtextarea
        Billtextarea.append("\nPayment Details:\n");
        Billtextarea.append("Total Bill: " + totalBill + "\n");
        Billtextarea.append("Amount Entered: " + amountEntered + "\n");
        Billtextarea.append("Change/Remaining Balance: " + changeBill + "\n");

        // Step 6: Delete the data from the productpurchase and availservices tables
        // Assuming you want to delete all records from these tables after payment

        String deleteProductPurchase = "DELETE FROM productpurchase";
        String deleteAvailServices = "DELETE FROM availservices";
        
        // Database operations should be inside a try-catch block
        try (PreparedStatement pst1 = con.prepareStatement(deleteProductPurchase);
             PreparedStatement pst2 = con.prepareStatement(deleteAvailServices)) {
            
            // Execute DELETE for productpurchase table
            pst1.executeUpdate();
            
            // Execute DELETE for availservices table
            pst2.executeUpdate();
            
            // Inform the user that the data was deleted successfully
            JOptionPane.showMessageDialog(this, "Payment processed successfully. Data has been deleted from the database.", "Payment Successful", JOptionPane.INFORMATION_MESSAGE);
            
            // Step 7: Thank you message after successful deletion
            Billtextarea.append("\n\nTHANK YOU FOR VISITING OUR SPA AND SALON.\n");

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error deleting data from database.", "Database Error", JOptionPane.ERROR_MESSAGE);
        }

        // Step 8: Add a delay of 10 seconds before proceeding to the User JFrame
        new Timer().schedule(new TimerTask() {
            @Override
            public void run() {
                // Close the current JFrame (if needed)
                dispose();
                // Open the User JFrame (adjust the class name accordingly)
                new User().setVisible(true);  // Assuming UserFrame is the next JFrame
            }
        }, 3000); // Delay of 10 seconds (10,000 milliseconds)

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error processing the payment.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_PayMouseClicked

    private void PayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_PayActionPerformed

    private void changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_changeActionPerformed

    private void SeeBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeeBillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SeeBillActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bill().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Amount;
    private javax.swing.JTextArea Billtextarea;
    private javax.swing.JLabel PHP;
    private javax.swing.JButton Pay;
    private javax.swing.JButton SeeBill;
    private javax.swing.JTextField change;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
